name: DockerHub CD Test

on:
  workflow_dispatch:
  push:
    branches: ['develop']

jobs:
  # JOB to run change detection
  detect-changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    - uses: actions/checkout@v4  # Push 이벤트기 때문에 Checkout 해야 함
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: 'develop'  # 해당 브랜치의 last commit과 변경점 비교
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'frontend/**'

  be-build:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./backend
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Grant gradlew execute permission
      run: chmod +x ./gradlew

    - name: Build with Gradle (clean)
      run: ./gradlew clean bootJar

    # Docker 이미지 빌드
    - name: Docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/momo-api .

    # DockerHub 로그인
    - name: Docker login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
  
    # Docker Hub 이미지 푸시
    - name: Docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/momo-api
  
  be-depoly:
    needs: be-build
    runs-on: self-hosted
    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
    - name: Docker run
      run: docker stop momo-api; docker run -d --rm --name momo-api -p 80:8080 devmomo24/momo-api
